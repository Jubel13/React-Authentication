{"version":3,"sources":["components/Profile/ProfileForm.module.css","components/Layout/MainNavigation.module.css","components/Profile/UserProfile.module.css","components/StartingPage/StartingPageContent.module.css","store/auth-context.js","components/Layout/MainNavigation.js","components/Layout/Layout.js","components/Profile/ProfileForm.js","components/Profile/UserProfile.js","components/Auth/AuthForm.js","pages/AuthPage.js","components/StartingPage/StartingPageContent.js","pages/HomePage.js","App.js","index.js","components/Auth/AuthForm.module.css"],"names":["module","exports","logoutTimer","AuthContext","React","createContext","token","isLoggedIn","login","logout","calculateRemainingTime","expirationTime","currentTime","Date","getTime","AuthContextProvider","props","initialToken","tokenData","storedToken","localStorage","getItem","storedExpirationTime","remainingTime","removeItem","duration","retrieveStoredToken","useState","setToken","userIsLoggedIn","logoutHandler","useCallback","clearTimeout","useEffect","console","log","setTimeout","contextValue","setItem","Provider","value","children","MainNavigation","authCtx","useContext","className","classes","header","to","logo","onClick","Layout","ProfileForm","newPasswordRef","useRef","history","useHistory","onSubmit","event","preventDefault","enteredNewPassword","current","fetch","method","body","JSON","stringify","idToken","password","returnSecureToken","headers","then","res","replace","form","control","htmlFor","type","id","minLength","ref","action","UserProfile","profile","AuthForm","isLogin","setIsLogin","emailInputRef","passwordInputRef","isLoading","setIsLoading","auth","url","enteredEmail","enteredPassword","email","ok","json","data","errorMessage","error","message","Error","expiresIn","catch","err","alert","required","actions","toggle","prevState","AuthPage","StartingPageContent","starting","HomePage","App","path","exact","ReactDOM","render","document","getElementById"],"mappings":"sHACAA,EAAOC,QAAU,CAAC,KAAO,0BAA0B,QAAU,6BAA6B,OAAS,8B,mBCAnGD,EAAOC,QAAU,CAAC,OAAS,+BAA+B,KAAO,+B,mBCAjED,EAAOC,QAAU,CAAC,QAAU,+B,mBCA5BD,EAAOC,QAAU,CAAC,SAAW,wC,gECCzBC,E,sEAEEC,EAAcC,IAAMC,cAAc,CACpCC,MAAO,GACPC,YAAY,EACZC,MAAO,SAACF,KACRG,OAAQ,eAGNC,EAAyB,SAACC,GAC5B,IAAMC,GAAc,IAAIC,MAAOC,UAK/B,OAJ0B,IAAID,KAAKF,GAAgBG,UAELF,GAqBrCG,EAAsB,SAACC,GAChC,IACIC,EADEC,EAjBkB,WACxB,IAAMC,EAAcC,aAAaC,QAAQ,SACnCC,EAAuBF,aAAaC,QAAQ,kBAC5CE,EAAgBb,EAAuBY,GAE7C,OAAIC,GAAiB,KACjBH,aAAaI,WAAW,SACxBJ,aAAaI,WAAW,kBACjB,MAEJ,CACHlB,MAAOa,EACPM,SAAUF,GAKIG,GAEdR,IACAD,EAAeC,EAAUZ,OAG7B,MAA0BqB,mBAASV,GAAnC,mBAAOX,EAAP,KAAcsB,EAAd,KAEMC,IAAmBvB,EAEnBwB,EAAgBC,uBAAY,WAC9BH,EAAS,MACTR,aAAaI,WAAW,SACxBJ,aAAaI,WAAW,kBACpBtB,GACA8B,aAAa9B,KAElB,IAYH+B,qBAAU,WACFf,IACAgB,QAAQC,IAAIjB,EAAUO,UACtBvB,EAAckC,WAAWN,EAAeZ,EAAUO,aAEvD,CAACP,EAAWY,IAEf,IAAMO,EAAe,CACjB/B,MAAOA,EACPC,WAAYsB,EACZrB,MApBiB,SAACF,EAAOK,GACzBiB,EAAStB,GACTc,aAAakB,QAAQ,QAAShC,GAC9Bc,aAAakB,QAAQ,iBAAkB3B,GAEvC,IAAMY,EAAgBb,EAAuBC,GAE7CT,EAAckC,WAAWN,EAAeP,IAcxCd,OAAQqB,GAGZ,OACI,cAAC3B,EAAYoC,SAAb,CAAsBC,MAAOH,EAA7B,SACKrB,EAAMyB,YAKJtC,I,iBC5CAuC,EArCQ,WACnB,IAAMC,EAAUC,qBAAWzC,GAErBI,EAAaoC,EAAQpC,WAM3B,OACI,yBAAQsC,UAAWC,IAAQC,OAA3B,UACI,cAAC,IAAD,CAAMC,GAAG,IAAT,SACI,qBAAKH,UAAWC,IAAQG,KAAxB,0BAEJ,8BACI,gCACM1C,GACE,6BACI,cAAC,IAAD,CAAMyC,GAAG,QAAT,qBAGPzC,GACG,6BACI,cAAC,IAAD,CAAMyC,GAAG,WAAT,uBAGPzC,GACG,6BACI,wBAAQ2C,QAvBV,WAClBP,EAAQlC,UAsBY,+BCrBb0C,EATA,SAACnC,GACd,OACE,eAAC,WAAD,WACE,cAAC,EAAD,IACA,+BAAOA,EAAMyB,e,iBC0CJW,EA7CK,WAChB,IAAMC,EAAiBC,mBACjBC,EAAUC,cAEVb,EAAUC,qBAAWzC,GAuB3B,OACI,uBAAMsD,SAvBY,SAACC,GACnBA,EAAMC,iBACN,IAAMC,EAAqBP,EAAeQ,QAAQrB,MAElDsB,MACI,wGACA,CACIC,OAAQ,OACRC,KAAMC,KAAKC,UAAU,CACjBC,QAASxB,EAAQrC,MACjB8D,SAAUR,EACVS,mBAAmB,IAEvBC,QAAS,CACL,eAAgB,sBAG1BC,MAAK,SAACC,GACJjB,EAAQkB,QAAQ,6BAKW5B,UAAWC,IAAQ4B,KAAlD,UACI,sBAAK7B,UAAWC,IAAQ6B,QAAxB,UACI,uBAAOC,QAAQ,eAAf,0BACA,uBACIC,KAAK,WACLC,GAAG,eACHC,UAAU,IACVC,IAAK3B,OAGb,qBAAKR,UAAWC,IAAQmC,OAAxB,SACI,2D,iBChCDC,EATK,WAClB,OACE,0BAASrC,UAAWC,IAAQqC,QAA5B,UACE,mDACA,cAAC,EAAD,Q,gBC6GSC,EA9GE,WACb,MAA8BzD,oBAAS,GAAvC,mBAAO0D,EAAP,KAAgBC,EAAhB,KACMC,EAAgBjC,mBAChBkC,EAAmBlC,mBACnBX,EAAUC,qBAAWzC,GACrBoD,EAAUC,cAEhB,EAAkC7B,oBAAS,GAA3C,mBAAO8D,EAAP,KAAkBC,EAAlB,KA6DA,OACI,0BAAS7C,UAAWC,IAAQ6C,KAA5B,UACI,6BAAKN,EAAU,QAAU,YACzB,uBAAM5B,SA1DQ,SAACC,GACnBA,EAAMC,iBAEN,IAIIiC,EAJEC,EAAeN,EAAc1B,QAAQrB,MACrCsD,EAAkBN,EAAiB3B,QAAQrB,MAEjDkD,GAAa,GAGTE,EADAP,EAEI,oHAGA,wGAERvB,MAAM8B,EAAK,CACP7B,OAAQ,OACRC,KAAMC,KAAKC,UAAU,CACjB6B,MAAOF,EACPzB,SAAU0B,EACVzB,mBAAmB,IAEvBC,QAAS,CACL,eAAgB,sBAGnBC,MAAK,SAACC,GAEH,OADAkB,GAAa,GACTlB,EAAIwB,GACGxB,EAAIyB,OAEJzB,EAAIyB,OAAO1B,MAAK,SAAC2B,GACpBhE,QAAQC,IAAI+D,GACZ,IAAIC,EAAe,yBAKnB,MAJID,GAAQA,EAAKE,OAASF,EAAKE,MAAMC,UACjCF,EAAeD,EAAKE,MAAMC,SAGxB,IAAIC,MAAMH,SAI3B5B,MAAK,SAAC2B,GACHhE,QAAQC,IAAI+D,GACZ,IAAM3E,EAAgB,IAAIV,MACtB,IAAIA,MAAOC,UAA8B,KAAjBoF,EAAKK,WAEjC5D,EAAQnC,MAAM0F,EAAK/B,QAAS5C,GAC5BgC,EAAQkB,QAAQ,4BAEnB+B,OAAM,SAACC,GACJC,MAAMD,EAAIJ,aAOd,UACI,sBAAKxD,UAAWC,IAAQ6B,QAAxB,UACI,uBAAOC,QAAQ,QAAf,wBACA,uBACIC,KAAK,QACLC,GAAG,QACH6B,UAAQ,EACR3B,IAAKO,OAGb,sBAAK1C,UAAWC,IAAQ6B,QAAxB,UACI,uBAAOC,QAAQ,WAAf,2BACA,uBACIC,KAAK,WACLC,GAAG,WACH6B,UAAQ,EACR3B,IAAKQ,OAGb,sBAAK3C,UAAWC,IAAQ8D,QAAxB,WACMnB,GACE,iCAASJ,EAAU,QAAU,mBAEhCI,GAAa,qDACd,wBACIZ,KAAK,SACLhC,UAAWC,IAAQ+D,OACnB3D,QAzFU,WAC1BoC,GAAW,SAACwB,GAAD,OAAgBA,MAqFf,SAKKzB,EACK,qBACA,0CCtGf0B,EAJE,WACf,OAAO,cAAC,EAAD,K,iBCOMC,EARa,WAC1B,OACE,yBAASnE,UAAWC,IAAQmE,SAA5B,SACE,sDCCSC,EAJE,WACf,OAAO,cAAC,EAAD,KC+BMC,MAzBf,WACI,IAAMxE,EAAUC,qBAAWzC,GAC3B,OACI,cAAC,EAAD,UACI,eAAC,IAAD,WACI,cAAC,IAAD,CAAOiH,KAAK,wBAAwBC,OAAK,EAAzC,SACI,cAAC,EAAD,OAEF1E,EAAQpC,YACN,cAAC,IAAD,CAAO6G,KAAK,QAAZ,SACI,cAAC,EAAD,MAGR,eAAC,IAAD,CAAOA,KAAK,WAAZ,UACKzE,EAAQpC,YAAc,cAAC,EAAD,KACrBoC,EAAQpC,YAAc,cAAC,IAAD,CAAUyC,GAAG,aAEzC,cAAC,IAAD,CAAOoE,KAAK,IAAZ,SACI,cAAC,IAAD,CAAUpE,GAAG,kCCpBjCsE,IAASC,OACL,cAAC,EAAD,UACI,cAAC,IAAD,UACI,cAAC,EAAD,QAGRC,SAASC,eAAe,U,kBCZ5BzH,EAAOC,QAAU,CAAC,KAAO,uBAAuB,QAAU,0BAA0B,QAAU,0BAA0B,OAAS,4B","file":"static/js/main.b5e09faa.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ProfileForm_form__21Zw-\",\"control\":\"ProfileForm_control__1nkmX\",\"action\":\"ProfileForm_action__2NcWX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"MainNavigation_header__2X_FQ\",\"logo\":\"MainNavigation_logo__1L4ol\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"UserProfile_profile__3kvX3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"starting\":\"StartingPageContent_starting__2N5du\"};","import React, { useState, useEffect, useCallback } from \"react\";\r\n\r\nlet logoutTimer;\r\n\r\nconst AuthContext = React.createContext({\r\n    token: \"\",\r\n    isLoggedIn: false,\r\n    login: (token) => {},\r\n    logout: () => {},\r\n});\r\n\r\nconst calculateRemainingTime = (expirationTime) => {\r\n    const currentTime = new Date().getTime();\r\n    const adjExpirationTime = new Date(expirationTime).getTime();\r\n\r\n    const remainingDuration = adjExpirationTime - currentTime;\r\n\r\n    return remainingDuration;\r\n};\r\n\r\nconst retrieveStoredToken = () => {\r\n    const storedToken = localStorage.getItem(\"token\");\r\n    const storedExpirationTime = localStorage.getItem(\"expirationTime\");\r\n    const remainingTime = calculateRemainingTime(storedExpirationTime);\r\n\r\n    if (remainingTime <= 60000) {\r\n        localStorage.removeItem(\"token\");\r\n        localStorage.removeItem(\"expirationTime\");\r\n        return null;\r\n    }\r\n    return {\r\n        token: storedToken,\r\n        duration: remainingTime,\r\n    };\r\n};\r\n\r\nexport const AuthContextProvider = (props) => {\r\n    const tokenData = retrieveStoredToken();\r\n    let initialToken;\r\n    if (tokenData) {\r\n        initialToken = tokenData.token;\r\n    }\r\n\r\n    const [token, setToken] = useState(initialToken);\r\n\r\n    const userIsLoggedIn = !!token;\r\n\r\n    const logoutHandler = useCallback(() => {\r\n        setToken(null);\r\n        localStorage.removeItem(\"token\");\r\n        localStorage.removeItem(\"expirationTime\");\r\n        if (logoutTimer) {\r\n            clearTimeout(logoutTimer);\r\n        }\r\n    }, []);\r\n\r\n    const loginHandler = (token, expirationTime) => {\r\n        setToken(token);\r\n        localStorage.setItem(\"token\", token);\r\n        localStorage.setItem(\"expirationTime\", expirationTime);\r\n\r\n        const remainingTime = calculateRemainingTime(expirationTime);\r\n\r\n        logoutTimer = setTimeout(logoutHandler, remainingTime);\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (tokenData) {\r\n            console.log(tokenData.duration);\r\n            logoutTimer = setTimeout(logoutHandler, tokenData.duration);\r\n        }\r\n    }, [tokenData, logoutHandler]);\r\n\r\n    const contextValue = {\r\n        token: token,\r\n        isLoggedIn: userIsLoggedIn,\r\n        login: loginHandler,\r\n        logout: logoutHandler,\r\n    };\r\n\r\n    return (\r\n        <AuthContext.Provider value={contextValue}>\r\n            {props.children}\r\n        </AuthContext.Provider>\r\n    );\r\n};\r\n\r\nexport default AuthContext;\r\n","import { useContext } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport AuthContext from \"../../store/auth-context\";\n\nimport classes from \"./MainNavigation.module.css\";\n\nconst MainNavigation = () => {\n    const authCtx = useContext(AuthContext);\n\n    const isLoggedIn = authCtx.isLoggedIn;\n\n    const logoutHandler = () => {\n        authCtx.logout();\n    };\n\n    return (\n        <header className={classes.header}>\n            <Link to='/'>\n                <div className={classes.logo}>React Auth</div>\n            </Link>\n            <nav>\n                <ul>\n                    {!isLoggedIn && (\n                        <li>\n                            <Link to='/auth'>Login</Link>\n                        </li>\n                    )}\n                    {isLoggedIn && (\n                        <li>\n                            <Link to='/profile'>Profile</Link>\n                        </li>\n                    )}\n                    {isLoggedIn && (\n                        <li>\n                            <button onClick={logoutHandler}>Logout</button>\n                        </li>\n                    )}\n                </ul>\n            </nav>\n        </header>\n    );\n};\n\nexport default MainNavigation;\n","import { Fragment } from 'react';\n\nimport MainNavigation from './MainNavigation';\n\nconst Layout = (props) => {\n  return (\n    <Fragment>\n      <MainNavigation />\n      <main>{props.children}</main>\n    </Fragment>\n  );\n};\n\nexport default Layout;\n","import classes from \"./ProfileForm.module.css\";\nimport { useRef, useContext } from \"react\";\nimport AuthContext from \"../../store/auth-context\";\nimport { useHistory } from \"react-router\";\n\nconst ProfileForm = () => {\n    const newPasswordRef = useRef();\n    const history = useHistory();\n\n    const authCtx = useContext(AuthContext);\n    const submitHandler = (event) => {\n        event.preventDefault();\n        const enteredNewPassword = newPasswordRef.current.value;\n\n        fetch(\n            \"https://identitytoolkit.googleapis.com/v1/accounts:update?key=AIzaSyBSAbmCalDyyob8Rff1nlhzAN7tJ6W5CT4\",\n            {\n                method: \"POST\",\n                body: JSON.stringify({\n                    idToken: authCtx.token,\n                    password: enteredNewPassword,\n                    returnSecureToken: false,\n                }),\n                headers: {\n                    \"Content-Type\": \"application/json\",\n                },\n            }\n        ).then((res) => {\n            history.replace(\"/React-Authentication\");\n        });\n    };\n\n    return (\n        <form onSubmit={submitHandler} className={classes.form}>\n            <div className={classes.control}>\n                <label htmlFor='new-password'>New Password</label>\n                <input\n                    type='password'\n                    id='new-password'\n                    minLength='7'\n                    ref={newPasswordRef}\n                />\n            </div>\n            <div className={classes.action}>\n                <button>Change Password</button>\n            </div>\n        </form>\n    );\n};\n\nexport default ProfileForm;\n","import ProfileForm from './ProfileForm';\nimport classes from './UserProfile.module.css';\n\nconst UserProfile = () => {\n  return (\n    <section className={classes.profile}>\n      <h1>Your User Profile</h1>\n      <ProfileForm />\n    </section>\n  );\n};\n\nexport default UserProfile;\n","import { useContext, useRef, useState } from \"react\";\nimport { useHistory } from \"react-router\";\nimport AuthContext from \"../../store/auth-context\";\n\nimport classes from \"./AuthForm.module.css\";\n\nconst AuthForm = () => {\n    const [isLogin, setIsLogin] = useState(true);\n    const emailInputRef = useRef();\n    const passwordInputRef = useRef();\n    const authCtx = useContext(AuthContext);\n    const history = useHistory();\n\n    const [isLoading, setIsLoading] = useState(false);\n\n    const switchAuthModeHandler = () => {\n        setIsLogin((prevState) => !prevState);\n    };\n\n    const submitHandler = (event) => {\n        event.preventDefault();\n\n        const enteredEmail = emailInputRef.current.value;\n        const enteredPassword = passwordInputRef.current.value;\n\n        setIsLoading(true);\n        let url;\n        if (isLogin) {\n            url =\n                \"https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyBSAbmCalDyyob8Rff1nlhzAN7tJ6W5CT4\";\n        } else {\n            url =\n                \"https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyBSAbmCalDyyob8Rff1nlhzAN7tJ6W5CT4\";\n        }\n        fetch(url, {\n            method: \"POST\",\n            body: JSON.stringify({\n                email: enteredEmail,\n                password: enteredPassword,\n                returnSecureToken: true,\n            }),\n            headers: {\n                \"Content-Type\": \"application/json\",\n            },\n        })\n            .then((res) => {\n                setIsLoading(false);\n                if (res.ok) {\n                    return res.json();\n                } else {\n                    return res.json().then((data) => {\n                        console.log(data);\n                        let errorMessage = \"Authentication failed!\";\n                        if (data && data.error && data.error.message) {\n                            errorMessage = data.error.message;\n                        }\n\n                        throw new Error(errorMessage);\n                    });\n                }\n            })\n            .then((data) => {\n                console.log(data);\n                const remainingTime = new Date(\n                    new Date().getTime() + +data.expiresIn * 1000\n                );\n                authCtx.login(data.idToken, remainingTime);\n                history.replace(\"/React-Authentication\");\n            })\n            .catch((err) => {\n                alert(err.message);\n            });\n    };\n\n    return (\n        <section className={classes.auth}>\n            <h1>{isLogin ? \"Login\" : \"Sign Up\"}</h1>\n            <form onSubmit={submitHandler}>\n                <div className={classes.control}>\n                    <label htmlFor='email'>Your Email</label>\n                    <input\n                        type='email'\n                        id='email'\n                        required\n                        ref={emailInputRef}\n                    />\n                </div>\n                <div className={classes.control}>\n                    <label htmlFor='password'>Your Password</label>\n                    <input\n                        type='password'\n                        id='password'\n                        required\n                        ref={passwordInputRef}\n                    />\n                </div>\n                <div className={classes.actions}>\n                    {!isLoading && (\n                        <button>{isLogin ? \"Login\" : \"Create Account\"}</button>\n                    )}\n                    {isLoading && <p>Sending Request.....</p>}\n                    <button\n                        type='button'\n                        className={classes.toggle}\n                        onClick={switchAuthModeHandler}\n                    >\n                        {isLogin\n                            ? \"Create new account\"\n                            : \"Login with existing account\"}\n                    </button>\n                </div>\n            </form>\n        </section>\n    );\n};\n\nexport default AuthForm;\n","import AuthForm from '../components/Auth/AuthForm';\n\nconst AuthPage = () => {\n  return <AuthForm />;\n};\n\nexport default AuthPage;\n","import classes from './StartingPageContent.module.css';\n\nconst StartingPageContent = () => {\n  return (\n    <section className={classes.starting}>\n      <h1>Welcome on Board!</h1>\n    </section>\n  );\n};\n\nexport default StartingPageContent;\n","import StartingPageContent from '../components/StartingPage/StartingPageContent';\n\nconst HomePage = () => {\n  return <StartingPageContent />;\n};\n\nexport default HomePage;\n","import { useContext } from \"react\";\nimport { Switch, Route, Redirect } from \"react-router-dom\";\n\nimport Layout from \"./components/Layout/Layout\";\nimport UserProfile from \"./components/Profile/UserProfile\";\nimport AuthPage from \"./pages/AuthPage\";\nimport HomePage from \"./pages/HomePage\";\nimport AuthContext from \"./store/auth-context\";\n\nfunction App() {\n    const authCtx = useContext(AuthContext);\n    return (\n        <Layout>\n            <Switch>\n                <Route path='/React-Authentication' exact>\n                    <HomePage />\n                </Route>\n                {!authCtx.isLoggedIn && (\n                    <Route path='/auth'>\n                        <AuthPage />\n                    </Route>\n                )}\n                <Route path='/profile'>\n                    {authCtx.isLoggedIn && <UserProfile />}\n                    {!authCtx.isLoggedIn && <Redirect to='/auth' />}\n                </Route>\n                <Route path='*'>\n                    <Redirect to='/React-Authentication' />\n                </Route>\n            </Switch>\n        </Layout>\n    );\n}\n\nexport default App;\n","import ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nimport \"./index.css\";\nimport App from \"./App\";\nimport { AuthContextProvider } from \"./store/auth-context\";\n\nReactDOM.render(\n    <AuthContextProvider>\n        <BrowserRouter>\n            <App />\n        </BrowserRouter>\n    </AuthContextProvider>,\n    document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"auth\":\"AuthForm_auth__37gyQ\",\"control\":\"AuthForm_control__4e7CN\",\"actions\":\"AuthForm_actions__2fEnK\",\"toggle\":\"AuthForm_toggle__15hKM\"};"],"sourceRoot":""}